let Game={States:{},Objects:{},Menus:{},config:{width:1024,height:768,availableColors:10,scoreGain:10,physics:{gravity:1300,flapForce:-400},trees:{gap:150,speed:-200,distance:300}},save:{version:1,selectedColor:0,highscore:0}};Game.saveState=function(){localStorage.setItem("FlappyBirdJS",JSON.stringify(Game.save))},Game.loadState=function(){let e=localStorage.getItem("FlappyBirdJS");if(!e)return void Game.saveState();let t=JSON.parse(e);t&&t.version&&t.version==Game.save.version?Game.save=t:Game.saveState()},Game.Menus.ColorSelectMenu=function(e,t){Phaser.Group.call(this,e),this.state=t,this.visible=!1,this.curSel=Game.save.selectedColor,this.items=[];for(let e=0;e<Game.config.availableColors;e++)this.items.push({sprite:"img_bird",frame:2*e});this.imgWidth=36,this.scl=1,this.sclHighlight=1.5,this.selectorSpace=16},Game.Menus.ColorSelectMenu.prototype=Object.create(Phaser.Group.prototype),Game.Menus.ColorSelectMenu.prototype.constructor=Game.Menus.ColorSelectMenu,Game.Menus.ColorSelectMenu.prototype.draw=function(){let e=this.items.length*(this.imgWidth+36)-36,t=this.game.world.centerX-e/2;for(let e=0;e<this.items.length;e++){let s=Math.floor(t+(this.imgWidth+36)*e),i=e==this.curSel&&!Phaser.Device.touch;this.items[e].obj=this.game.add.sprite(s,this.game.world.centerY,"img_bird",2*e,this),this.items[e].obj.scale.setTo(i?this.sclHighlight:this.scl),this.items[e].obj.anchor.set(.5),this.items[e].obj.animations.add("anim",[this.items[e].frame,this.items[e].frame+1]),this.items[e].obj.animations.play("anim",8,!0),this.items[e].obj.inputEnabled=!0,this.items[e].obj.events.onInputOver.add(function(){this._setSelected(e)},this),this.items[e].obj.events.onInputDown.add(function(){this._setColor(e)},this),this.items[e].x=s}let s=Math.floor(this.items[this.curSel].obj.centerY+this.items[this.curSel].obj.height+this.selectorSpace);this.selector=this.game.add.bitmapText(this.items[this.curSel].x,s,"fnt_flappy","^",54,this),this.selector.anchor.setTo(.5),this.selector.visible=!Phaser.Device.touch},Game.Menus.ColorSelectMenu.prototype.handle=function(){this.curSel;let e=this.game.input.keyboard.createCursorKeys(),t=this.game.input.keyboard.addKey(Phaser.KeyCode.SPACEBAR);e.right.justPressed()?this._setSelected(Math.min(this.items.length-1,this.curSel+1)):e.left.justPressed()?this._setSelected(Math.max(0,this.curSel-1)):t.justPressed()&&this._setColor(this.curSel)},Game.Menus.ColorSelectMenu.prototype._setColor=function(e){Game.save.selectedColor=e,Game.saveState(),this.state.changeMenu(Game.States.Menu.MENU_MAIN)},Game.Menus.ColorSelectMenu.prototype._setSelected=function(e){let t=this.curSel;if(this.curSel=e,t!=this.curSel){let e=!Phaser.Device.touch;this.items[t].obj.scale.setTo(this.scl),this.items[this.curSel].obj.scale.setTo(e?this.sclHighlight:this.scl);let s=Math.floor(this.items[this.curSel].obj.centerY+this.items[this.curSel].obj.height+this.selectorSpace);this.selector.y=s,this.selector.x=this.items[this.curSel].x}},Game.Menus.MainMenu=function(e,t){Phaser.Group.call(this,e),this.state=t,this.visible=!1,this.curSel=0,this.curColor=Game.save.selectedColor,this.items=[{text:"Start",action:function(){this.game.state.start("play")}}],Game.config.availableColors>1&&this.items.push({text:"Farbwahl",action:function(){this.state.changeMenu(Game.States.Menu.MENU_COLOR_SELECT)}}),this.fontSize=64,this.fontSizeHighlight=74,this.selectorSpace=16},Game.Menus.MainMenu.prototype=Object.create(Phaser.Group.prototype),Game.Menus.MainMenu.prototype.constructor=Game.Menus.MainMenu,Game.Menus.MainMenu.prototype.draw=function(){let e=(this.fontSize+16)*this.items.length-16,t=this.game.world.centerY-e/2;for(let e=0;e<this.items.length;e++){let s=Math.floor(t+(this.fontSize+16)*e),i=e==this.curSel&&!Phaser.Device.touch;this.items[e].obj=this.game.add.bitmapText(this.game.world.centerX,s,"fnt_flappy",this.items[e].text,i?this.fontSizeHighlight:this.fontSize,this),this.items[e].obj.anchor.setTo(.5,0),this.items[e].obj.inputEnabled=!0,this.items[e].obj.events.onInputOver.add(function(){this._setSelected(e)},this),this.items[e].obj.events.onInputDown.add(function(){this.items[this.curSel].action.call(this)},this),this.items[e].y=s}let s=Math.floor(this.items[this.curSel].obj.centerX-this.items[this.curSel].obj.width/2-this.selectorSpace);this.selector=this.game.add.sprite(s,this.items[this.curSel].y,"img_bird",1,this),this.selector.animations.add("flap",[2*this.curColor,2*this.curColor+1]),this.selector.animations.play("flap",8,!0),this.selector.anchor.setTo(1,-.5),this.selector.visible=!Phaser.Device.touch,Phaser.Device.touch&&(this.selectedColor=this.game.add.sprite(this.game.world.centerX,this.game.world.height-200,"img_bird",1,this),this.selectedColor.animations.add("flap",[2*this.curColor,2*this.curColor+1]),this.selectedColor.animations.play("flap",8,!0),this.selectedColor.anchor.set(.5))},Game.Menus.MainMenu.prototype.handle=function(){this.curSel;let e=this.game.input.keyboard.createCursorKeys(),t=this.game.input.keyboard.addKey(Phaser.KeyCode.SPACEBAR);this.curColor!=Game.save.selectedColor&&(this.curColor=Game.save.selectedColor,this.selector.animations.add("flap",[2*this.curColor,2*this.curColor+1]),this.selector.animations.play("flap",8,!0),this.selectedColor&&(this.selectedColor.animations.add("flap",[2*this.curColor,2*this.curColor+1]),this.selectedColor.animations.play("flap",8,!0))),e.down.justPressed()?this._setSelected(Math.min(this.items.length-1,this.curSel+1)):e.up.justPressed()?this._setSelected(Math.max(0,this.curSel-1)):t.justPressed()&&this.items[this.curSel].action.call(this)},Game.Menus.MainMenu.prototype._setSelected=function(e){let t=this.curSel;if(this.curSel=e,t!=this.curSel){let e=!Phaser.Device.touch;this.items[t].obj.fontSize=this.fontSize,this.items[this.curSel].obj.fontSize=e?this.fontSizeHighlight:this.fontSize;let s=Math.floor(this.items[this.curSel].obj.centerX-this.items[this.curSel].obj.width/2-this.selectorSpace);this.selector.x=s,this.selector.y=this.items[this.curSel].y}},Game.Objects.Bird=function(e,t,s){Phaser.Sprite.call(this,e,t,s,"img_bird"),this.game.physics.arcade.enableBody(this),this.body.moves=!1,this.body.immovable=!0,this.baseFrame=2*Game.save.selectedColor,this.animations.add("flap",[this.baseFrame,this.baseFrame+1]),this.frame=2*Game.save.selectedColor,this.game.add.existing(this)},Game.Objects.Bird.prototype=Object.create(Phaser.Sprite.prototype),Game.Objects.Bird.prototype.constructor=Game.Objects.Bird,Game.Objects.Bird.prototype.start=function(){this.animations.play("flap",8,!0),this.body.moves=!0,this.body.immovable=!1},Game.Objects.Bird.prototype.stop=function(){this.animations.stop("flap",!0),this.frame=this.baseFrame,this.body.moves=!1,this.body.immovable=!0},Game.Objects.Bird.prototype.flap=function(){this.body.velocity.y=Game.config.physics.flapForce},Game.Objects.Ground=function(e,t){Phaser.TileSprite.call(this,e,0,e.height-100,e.width,100,"img_ground"),this.speed=t,this.game.add.existing(this)},Game.Objects.Ground.prototype=Object.create(Phaser.TileSprite.prototype),Game.Objects.Ground.prototype.constructor=Game.Objects.Ground,Game.Objects.Ground.prototype.start=function(){this.autoScroll(this.speed,0)},Game.Objects.Ground.prototype.stop=function(){this.autoScroll(0,0)},Game.Objects.TreeGroup=function(e,t,s,i){Phaser.Group.call(this,e),this.distance=i,this.numTrees=Math.ceil(this.game.world.width/(90+i))+1;for(let e=0;e<this.numTrees;e++)new Game.Objects.Tree(this.game,this,e,t,s).restart(this.game.world.width+e*this.distance);this.firstTree=this.getAt(0),this.lastTree=this.getAt(this.length-1),this.currentTree=this.firstTree},Game.Objects.TreeGroup.prototype=Object.create(Phaser.Group.prototype),Game.Objects.TreeGroup.prototype.constructor=Game.Objects.TreeGroup,Game.Objects.TreeGroup.prototype.checkVisibilty=function(){this.firstTree.getWorldX()<-this.firstTree.width&&(this.firstTree.restart(this.lastTree.getWorldX()+this.distance),this.firstTree=this._getNextTree(this.firstTree.index),this.lastTree=this._getNextTree(this.lastTree.index))},Game.Objects.TreeGroup.prototype._getNextTree=function(e){return this.getAt((e+1)%this.length)},Game.Objects.TreeGroup.prototype.start=function(){for(let e=0;e<this.numTrees;e++)this.getAt(e).start()},Game.Objects.TreeGroup.prototype.stop=function(){for(let e=0;e<this.numTrees;e++)this.getAt(e).stop()},Game.Objects.TreeGroup.prototype.isColliding=function(e){return this.game.physics.arcade.collide(e,this.currentTree)},Game.Objects.TreeGroup.prototype.activateNextTree=function(){this.currentTree=this._getNextTree(this.currentTree.index)},Game.Objects.TreeGroup.prototype.hasPassed=function(e){return e.x>this.currentTree.getGapX()},Game.Objects.Tree=function(e,t,s,i,o){Phaser.Group.call(this,e,t),this.index=s,this.speed=o,this.topTree=new Phaser.Sprite(this.game,0,0,"img_tree",0),this.bottomTree=new Phaser.Sprite(this.game,0,0,"img_tree",1),this.game.physics.arcade.enableBody(this.topTree),this.game.physics.arcade.enableBody(this.bottomTree),this.topTree.body.allowGravity=!1,this.topTree.body.immovable=!0,this.bottomTree.body.allowGravity=!1,this.bottomTree.body.immovable=!0,this.add(this.topTree),this.add(this.bottomTree),this.gap=Math.min(this.game.world.height-320,i),this.topMin=110-this.topTree.height,this.topMax=this.game.world.height-this.topTree.height-this.gap-210,this.running=!1},Game.Objects.Tree.prototype=Object.create(Phaser.Group.prototype),Game.Objects.Tree.prototype.constructor=Game.Objects.Tree,Game.Objects.Tree.prototype.restart=function(e){this.topTree.reset(0,0),this.bottomTree.reset(0,this.topTree.height+this.gap),this.x=e,this.y=this.game.rnd.integerInRange(this.topMin,this.topMax),this.running&&this.setAll("body.velocity.x",this.speed)},Game.Objects.Tree.prototype.getWorldX=function(){return this.topTree.world.x},Game.Objects.Tree.prototype.start=function(){this.setAll("body.velocity.x",this.speed),this.running=!0},Game.Objects.Tree.prototype.stop=function(){this.setAll("body.velocity.x",0),this.running=!1},Game.Objects.Tree.prototype.getGapX=function(){return this.bottomTree.world.x+this.bottomTree.width},Game.States.Boot=function(e){Phaser.State.call(this)},Game.States.Boot.prototype=Object.create(Phaser.State.prototype),Game.States.Boot.prototype.constructor=Game.States.Boot,Game.States.Boot.prototype.preload=function(){this.game.load.image("loading","assets/images/loading.png")},Game.States.Boot.prototype.create=function(){this.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL,this.scale.pageAlignVertically=!0,this.scale.pageAlignHorizontally=!0,this.game.stage.backgroundColor="#000000",this.game.physics.startSystem(Phaser.Physics.ARCADE),this.game.physics.arcade.gravity.y=Game.config.physics.gravity,this.game.stage.disableVisibilityChange=!0,this.game.state.start("loading")},Game.States.Loading=function(e){Phaser.State.call(this)},Game.States.Loading.prototype=Object.create(Phaser.State.prototype),Game.States.Loading.prototype.constructor=Game.States.Loading,Game.States.Loading.prototype.preload=function(){let e=this.add.sprite(this.world.centerX,this.world.centerY,"loading");e.anchor.setTo(.5,.5),this.load.setPreloadSprite(e),this.game.load.spritesheet("img_bird","assets/images/img_bird.png",36,36,20),this.game.load.spritesheet("img_tree","assets/images/img_tree.png",90,400,2),this.game.load.image("img_ground","assets/images/img_ground.png"),this.load.bitmapFont("fnt_flappy","assets/fonts/fnt_flappy.png","assets/fonts/fnt_flappy.fnt"),Game.loadState()},Game.States.Loading.prototype.create=function(){this.game.stage.backgroundColor="#89bfdc",this.game.state.start("menu")},Game.States.Menu=function(e){Phaser.State.call(this),this.menus=[]},Game.States.Menu.prototype=Object.create(Phaser.State.prototype),Game.States.Menu.prototype.constructor=Game.States.Menu,Game.States.Menu.MENU_MAIN=0,Game.States.Menu.MENU_COLOR_SELECT=1,Game.States.Menu.prototype.create=function(){this.trees=new Game.Objects.TreeGroup(this.game,Game.config.trees.gap,Game.config.trees.speed,Game.config.trees.distance),this.trees.start(),this.ground=new Game.Objects.Ground(this.game,Game.config.trees.speed),this.ground.start(),this.title=this.game.add.bitmapText(this.game.world.centerX,128,"fnt_flappy","Flappy Bird JS",128),this.title.anchor.setTo(.5),this.highscore=this.game.add.bitmapText(this.game.world.centerX,250,"fnt_flappy","Highscore: "+Game.save.highscore,48),this.highscore.anchor.setTo(.5),this.menus[Game.States.Menu.MENU_MAIN]=new Game.Menus.MainMenu(this.game,this),this.menus[Game.States.Menu.MENU_MAIN].draw(),this.game.add.existing(this.menus[Game.States.Menu.MENU_MAIN]),this.menus[Game.States.Menu.MENU_COLOR_SELECT]=new Game.Menus.ColorSelectMenu(this.game,this),this.menus[Game.States.Menu.MENU_COLOR_SELECT].draw(),this.game.add.existing(this.menus[Game.States.Menu.MENU_COLOR_SELECT]),this.changeMenu(Game.States.Menu.MENU_MAIN)},Game.States.Menu.prototype.update=function(){this.trees.checkVisibilty(),this.menus[this.curMenu].handle()},Game.States.Menu.prototype.changeMenu=function(e){if(!(e>=this.menus.length||e<0)){for(let e=0;e<this.menus.length;e++)this.menus[e].visible=!1;this.menus[e].visible=!0,this.curMenu=e}},Game.States.Play=function(e){Phaser.State.call(this),this.beginFontSize=256,this.endFontSize=32},Game.States.Play.prototype=Object.create(Phaser.State.prototype),Game.States.Play.prototype.constructor=Game.States.Play,Game.States.Play.prototype.create=function(){this.countdownPosition=3,this.started=!1,this.gameover=!1,this.score=0,this.input.onTap.add(this._onTap,this),this.trees=new Game.Objects.TreeGroup(this.game,Game.config.trees.gap,Game.config.trees.speed,Game.config.trees.distance),this.ground=new Game.Objects.Ground(this.game,Game.config.trees.speed),this.bird=new Game.Objects.Bird(this.game,200,this.game.world.centerY),this.scoreBoard=this.game.add.bitmapText(this.game.world.centerX,100,"fnt_flappy",this.score+"",96),this.scoreBoard.anchor.setTo(.5),this.scoreBoard.visible=!1;let e="Press Space to continue";Phaser.Device.touch&&(e="Tap to continue"),this.gameoverHeadline=this.game.add.bitmapText(this.game.world.centerX,this.game.world.centerY-50,"fnt_flappy","Game Over",160),this.gameoverHeadline.anchor.setTo(.5),this.gameoverHeadline.visible=!1,this.gameoverSubline=this.game.add.bitmapText(this.game.world.centerX,this.game.world.centerY+70,"fnt_flappy",e,64),this.gameoverSubline.anchor.setTo(.5),this.gameoverSubline.visible=!1,this.highscoreMessage=this.game.add.bitmapText(this.game.world.centerX,200,"fnt_flappy","Neuer Highscore!",64),this.highscoreMessage.anchor.setTo(.5),this.highscoreMessage.visible=!1,this.countdown=this.game.add.bitmapText(this.game.world.centerX,200,"fnt_flappy",this.countdownPosition,this.beginFontSize),this.countdown.anchor.setTo(.5),this.countdownTween=this.game.add.tween(this.countdown),this.countdownTween.to({fontSize:this.endFontSize,alpha:0},1e3,Phaser.Easing.Linear.None),this.countdownTween.onComplete.add(this._countdown,this),this.countdownTween.start()},Game.States.Play.prototype._countdown=function(){this.countdownPosition--,this.countdownPosition>-1?(this.countdown.setText(this.countdownPosition>0?this.countdownPosition:"Start"),this.countdown.alpha=1,this.countdown.fontSize=this.beginFontSize,this.countdownTween.start()):(this.started=!0,this.trees.start(),this.ground.start(),this.bird.start(),this.scoreBoard.visible=!0)},Game.States.Play.prototype._gameover=function(){this.started=!1,this.trees.stop(),this.ground.stop(),this.bird.stop(),this.gameoverTween=this.game.add.tween(this.bird),this.gameoverTween.to({y:[this.bird.y-100,this.game.world.height+this.bird.height]},1e3,Phaser.Easing.Linear.None),this.gameoverTween.interpolation(Phaser.Math.catmullRomInterpolation),this.gameoverTween.onComplete.add(this._gameoverComplete,this),this.gameoverTween.start()},Game.States.Play.prototype._gameoverComplete=function(){this.gameoverHeadline.visible=!0,this.gameoverSubline.visible=!0,this.score>Game.save.highscore&&(this.highscoreMessage.visible=!0,Game.save.highscore=this.score,Game.saveState()),this.gameover=!0},Game.States.Play.prototype._onTap=function(){this.started&&this.bird.flap(),this.gameover&&this.game.state.start("menu")},Game.States.Play.prototype.update=function(){let e=this.game.input.keyboard.addKey(Phaser.KeyCode.SPACEBAR);if(this.trees.checkVisibilty(),this.started){if(e.justPressed()&&this.bird.flap(),this.bird.y+this.bird.height>this.game.world.height-this.ground.height||this.bird.y<-this.bird.height)return this._gameover();if(this.trees.isColliding(this.bird))return this._gameover();this.trees.hasPassed(this.bird)&&(this.score+=Game.config.scoreGain,this.scoreBoard.setText(this.score),this.trees.activateNextTree())}this.gameover&&e.justPressed()&&this.game.state.start("menu")};